{"version":3,"sources":["Components/Button/Button.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/Contact/Contact.jsx","Components/ContactsList/ContactsList.jsx","App.jsx","index.js"],"names":["Button","type","text","onClick","disabled","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","onBtnClick","props","addContact","this","onChange","pattern","title","required","Component","Filter","onFilterChange","Contact","idx","ContactsList","list","map","id","App","contacts","filter","every","contact","ps","nanoid","alert","deleteContact","handleFilterChange","getFindContact","normalizeFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d04fc7e9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ type, text, onClick, disabled }) {\n  return (\n    <button type={type} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  options: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  }),\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onBtnClick = () => {\n    const { name, number } = this.state;\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { handleInputChange, onBtnClick } = this;\n    const { name, number } = this.state;\n\n    return (\n      <form>\n        <label>\n          Name\n          <input\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <br />\n        <Button\n          onClick={onBtnClick}\n          text=\"Add Contact\"\n          type=\"button\"\n          disabled={number && name ? false : true}\n        />\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onFilterChange }) {\n  return (\n    <label>\n      Find contacts by name :\n      <input\n        onChange={onFilterChange}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"../Button\";\n\nfunction Contact({ name, number, idx, onClick }) {\n  return (\n    <li>\n      <p>\n        {idx + 1} - {name}: {number}\n        <Button onClick={onClick} text=\"Delete\" type=\"button\" />\n      </p>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  options: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    idx: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n  }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Contact from \"../Contact\";\n\nfunction ContactsList({ list, onClick }) {\n  return (\n    <ul>\n      {list.map(({ name, number, id }, idx) => (\n        <Contact\n          key={id}\n          idx={idx}\n          name={name}\n          number={number}\n          onClick={() => {\n            onClick(id);\n          }}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  list: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    this.state.contacts.every((contact) => contact.name !== name)\n      ? this.setState((ps) => ({\n          contacts: [\n            ...ps.contacts,\n            {\n              name,\n              number,\n              id: nanoid(),\n            },\n          ],\n        }))\n      : alert(`${name} is alredy in contacts`);\n  };\n\n  deleteContact = (id) => {\n    this.setState((ps) => ({\n      contacts: ps.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFindContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { addContact, deleteContact, handleFilterChange, getFindContact } =\n      this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <br />\n        <ContactForm addContact={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilterChange={handleFilterChange} />\n        <ContactsList list={getFindContact()} onClick={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}