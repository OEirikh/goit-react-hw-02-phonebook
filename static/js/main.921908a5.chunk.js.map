{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactsList/ContactsList.jsx","App.jsx","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","onBtnClick","props","addContact","this","onChange","type","pattern","title","required","onClick","Component","Filter","onFilterChange","ContactsList","list","onDeleteContact","map","idx","id","App","contacts","filter","every","contact","ps","nanoid","alert","deleteContact","handleFilterChange","getFindContact","normalizeFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.921908a5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onBtnClick = () => {\n    const { name, number } = this.state;\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { handleInputChange, onBtnClick } = this;\n    const { name, number } = this.state;\n\n    return (\n      <form>\n        <label>\n          Name\n          <input\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"button\" onClick={onBtnClick}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onFilterChange }) {\n  return (\n    <label>\n      Find contacts by name :\n      <input\n        onChange={onFilterChange}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactsList({ list, onDeleteContact }) {\n  return (\n    <ul>\n      {list.map(({ name, number, id }, idx) => (\n        <li key={id}>\n          <p>\n            {idx + 1} - {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button>\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  list: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactsList\";\n// import s from './App.module.css'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    this.state.contacts.every((contact) => contact.name !== name)\n      ? this.setState((ps) => ({\n          contacts: [\n            ...ps.contacts,\n            {\n              name,\n              number,\n              id: nanoid(),\n            },\n          ],\n        }))\n      : alert(`${name} is alredy in contacts`);\n  };\n\n  deleteContact = (id) => {\n    this.setState((ps) => ({\n      contacts: ps.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFindContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { handleFilterChange, getFindContact, addContact, deleteContact } =\n      this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <br />\n        <ContactForm addContact={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilterChange={handleFilterChange} />\n        <ContactsList list={getFindContact()} onDeleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}