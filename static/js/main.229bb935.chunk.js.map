{"version":3,"sources":["Components/ContactsList/ContactsList.jsx","App.jsx","index.js"],"names":["ContactsList","list","map","idx","name","number","id","App","state","contacts","filter","onInputChange","e","currentTarget","value","setState","addContact","ps","nanoid","getFindContacts","normalizeFilter","toLowerCase","contact","includes","this","onChange","type","pattern","title","required","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAgBeA,MAdf,YAAiC,IAATC,EAAQ,EAARA,KACtB,OACE,6BACGA,EAAKC,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACR,6BACE,8BACGH,EAAM,EADT,MACeC,EADf,KACuBC,MAFhBC,SCDXC,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAEH,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAEhDD,KAAM,GACNC,OAAQ,GACRK,OAAQ,I,EAGVC,cAAgB,SAACC,GACf,MAAwBA,EAAEC,cAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBX,EAAOU,K,EAG1BE,WAAa,WACX,MAAyB,EAAKR,MAAtBH,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,KAChB,OACE,EAAKW,UAAS,SAACE,GAAD,MAAS,CACrBR,SAAS,GAAD,mBACHQ,EAAGR,UADA,CAEN,CACEJ,OAAQA,EACRD,KAAMA,EACNE,GAAIY,qBAIV,EAAKH,SAAS,CACZX,KAAM,GACNC,OAAQ,M,EAKdc,gBAAkB,WAChB,MAA6B,EAAKX,MAA1BC,EAAR,EAAQA,SACFW,EADN,EAAkBV,OACaW,cAC/B,OAAOZ,EAASC,QAAO,SAACY,GAAD,OACrBA,EAAQlB,KAAKiB,cAAcE,SAASH,O,4CAIxC,WACE,MAAiCI,KAAKhB,MAA9BJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQK,EAAtB,EAAsBA,OACdC,EAA+Ca,KAA/Cb,cAAeK,EAAgCQ,KAAhCR,WAAYG,EAAoBK,KAApBL,gBAEnC,OACE,gCACE,2CACA,uBACA,iCACE,yCAEE,uBACEM,SAAUd,EACVG,MAAOV,EACPsB,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,2CAEE,uBACEJ,SAAUd,EACVG,MAAOT,EACPqB,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAASI,QAASd,EAA/B,4BAIF,0CACA,0DAEE,uBACES,SAAUd,EACVG,MAAOJ,EACPgB,KAAK,OACLtB,KAAK,cAIT,cAAC,EAAD,CAAcH,KAAMkB,a,GA9FVY,aAoGHxB,ICrGfyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.229bb935.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ContactsList({ list }) {\n  return (\n    <ul>\n      {list.map(({ name, number, id }, idx) => (\n        <li key={id}>\n          <p>\n            {idx + 1} - {name}: {number}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactsList from \"./Components/ContactsList\";\n// import s from './App.module.css'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n\n  onInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = () => {\n    const { number, name } = this.state;\n    return (\n      this.setState((ps) => ({\n        contacts: [\n          ...ps.contacts,\n          {\n            number: number,\n            name: name,\n            id: nanoid(),\n          },\n        ],\n      })),\n      this.setState({\n        name: \"\",\n        number: \"\",\n      })\n    );\n  };\n\n  getFindContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    const { onInputChange, addContact, getFindContacts } = this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <br />\n        <form>\n          <label>\n            Name\n            <input\n              onChange={onInputChange}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              onChange={onInputChange}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button type=\"button\" onClick={addContact}>\n            Add Contact\n          </button>\n        </form>\n        <h2>Contacts</h2>\n        <label>\n          Find contacts by name\n          <input\n            onChange={onInputChange}\n            value={filter}\n            type=\"text\"\n            name=\"filter\"\n          />\n        </label>\n\n        <ContactsList list={getFindContacts()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}